install.packages("Swirl")
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h= 1.5,col="blue")
abline(h= .4,col="red")
5
9
12
abline(h= .05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
swirl()
require(swirl)
swirl()
cmat
plot(cx,cy,col=c("red","orange","purple"))
plot(cx,cy,col=c("red","orange","purple"),pch=3,cex=2.lwd=2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2.lwd=2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=col1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(y,newClust2,mean)
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2=lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmOBj$iter
kmObj$iter
kmObj$cluster
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green",pch=3,cex=3,lwd=3))
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3))
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myEdit("addPatt.R")
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
(svd1$u[,1] and svd1$d[1]) %*% svd1$d
(svd1$u[,1], svd1$d[1]) %*% svd1$d
(svd1$u[,1] && svd1$d[1]) %*% svd1$d
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(al)
myImage(a1)
a1 <- (svd1$u[,1] * svd1$d[1:2]) %*% t(svd1$v[,1])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject=1)
sub1 <- subset(ssd,subject==1)
dim(sub1)
names(sub1)
names(sub1[1:12])
myEdit("showXY.R")
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[1,:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
dist(sub1[,c(10:12,maxCon)])
mdist <-dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kclust <- kmeans(sub1[,-563:564])
kclust <- kmeans(sub1)
kclust <- kmeans(sub1,centers=6)
kclust <- kmeans(sub1[,-563:564],centers=6)
kclust <- kmeans(sub1[,-562:563],centers=6)
kclust <- kmeans(sub1[,-563:562],centers=6)
kclust <- kmeans(sub1[,1:561],centers=6)
kclust <- kmeans(sub1[,-c(562:563)],centers=6)
kclust <- kmeans(sub1[,-c(562,563)],centers=6)
kClust <- kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$clusters)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying CLuster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
naames(sub1)
names(sub1)
names(sub1[1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Laying Cluster")
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library(devtools)
install_github("twitteR", username="geoffjentry")
#connect all libraries
library(twitteR)
library(ROAuth)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(tm)
library(wordcloud)
library(RColorBrewer)
require(RCurl)
#initialize the twitter app authentications
consumer_key <- "wOj58vqE8onMQYAFBeAnUgHcC"
consumer_secret <- "8Hh8l7FWeZoXjHV4emQ4EwQ9yBFMZjIYhlAt15O5vP4rNfawMa"
access_token <- "32600877-SUEQzAuJDuZPEdAvorNzX3usuLAENHTPmGVk0eXuF"
access_secret <- "PA16VhIdjerpVprzcRD6bZl4YlXervAUlQSPeztvAyA70"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
list1 <- userTimeline('earlylightbalt',includeRts = T,n=3000)
DE1Tweet=sapply(list1, function(x) x$getText())
DE1date=lapply(list1, function(x) x$getCreated())
DE1date=sapply(DE1date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet1=sapply(list1, function(x) x$getIsRetweet())
retweeted1=sapply(list1, function(x) x$getRetweeted())
retweetcount1=sapply(list1, function(x) x$getRetweetCount())
favoritecount1=sapply(list1, function(x) x$getFavoriteCount())
favorited1=sapply(list1, function(x) x$getFavorited())
data=as.data.frame(cbind(tweet=DE1Tweet,date=DE1date,
isretweet=isretweet1,retweeted=retweeted1, retweetcount=retweetcount1,favoritecount=favoritecount1,favorited=favorited1))
sdate <- tbl_df(as.data.frame(seq.Date(as.Date("2013/05/02"),as.Date("2016/06/01"),by = "day")))
names(sdate) <- 'day'
data$day <- as.Date(data$date,format="%Y-%m-%d")
day <- tbl_df(data)%>%group_by(day)%>%summarise(tweets=n(),fav = mean(as.numeric(favoritecount),na.rm=T),retweet=mean(as.numeric(retweetcount)))
day <- left_join(sdate,day,by='day')
day[is.na(day)] <- 0
source("MA.R")
setwd("~/Desktop/ELM_Twitter")
source("MA.R")
day$avTweets <- movingAverage(day$tweets,n=30,F)
ggplot(data=day,aes(x=day)) +
geom_line(aes(y=tweets),size=1,colour = "#7fbf7f") +
geom_line(aes(y=avTweets),size=1.5,colour="#000000")+
theme_bw() +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill="#F0F0F0")) +
theme(plot.background=element_rect(fill="#F0F0F0")) +
theme(panel.border=element_rect(colour="#F0F0F0")) +
# Format the grid
theme(panel.grid.major=element_line(colour="#D0D0D0",size=.75)) +
theme(axis.ticks=element_blank()) +
# Dispose of the legend
theme(legend.position="none") +
# Set title and axis labels, and format these and tick marks
ggtitle("Early Light Media Tweets per Day") +
theme(plot.title=element_text(face="bold",hjust=0,vjust=2,colour="#3C3C3C",size=20)) +
ylab("Frequency") +
xlab("Date") +
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5)) +
# Big bold line at y=0
geom_hline(yintercept=0,size=1.2,colour="#535353") +
# Plot margins and finally line annotations
theme(plot.margin = unit(c(1, 1, .5, .7), "cm"))
#annotate("text",x=as.Date("2016-05-12"),y=500,label="$300 Goal",colour="#008489")
#annotate("text",x=25,y=7.5,label="Line 2",colour="#00bdc4")
View(day)
with(day,plot(tweets~fav))
with(day,plot(tweets~retweet))
histogram(day$tweets)
hist(day$tweets)
hist(day$fav)
histogram(day$tweets)
hist(day$tweets)
View(day)
data$time <- strftime(data$date, format="%H",tz = "UTC")
time <- tbl_df(data)%>%group_by(time)%>%summarise(tweets=n(),fav = mean(as.numeric(favoritecount),na.rm=T),retweet=mean(as.numeric(retweetcount)))
ggplot(data=time,aes(x=time)) +
geom_line(aes(y=tweets,group = 1,colour="#000000"),size=1)+
geom_line(aes(y=fav,group = 1,colour="#faaca7"),size=1)+
geom_line(aes(y=retweet,group = 1,colour="#7fbf7f"),size=1)+
scale_colour_manual(name="Engagement",
values=c("#000000","#faaca7", "#7fbf7f"),
labels=c("Tweets","Favorites", "Retweets"))+
theme_bw() +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill="#F0F0F0")) +
theme(plot.background=element_rect(fill="#F0F0F0")) +
theme(panel.border=element_rect(colour="#F0F0F0")) +
# Format the grid
theme(panel.grid.major=element_line(colour="#D0D0D0",size=.75)) +
theme(axis.ticks=element_blank()) +
# Dispose of the legend
theme(legend.justification=c(1,0), legend.position=c(1,0))+
# Set title and axis labels, and format these and tick marks
ggtitle("Average Number of Favorites and Retweets for Early Light Media \n by Hour of the Day") +
theme(plot.title=element_text(face="bold",hjust=0,vjust=2,colour="#3C3C3C",size=20)) +
ylab("Average") +
xlab("Hour of Day (24 Hour)") +
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5)) +
# Big bold line at y=0
geom_hline(yintercept=0,size=1.2,colour="#535353") +
# Plot margins and finally line annotations
theme(plot.margin = unit(c(1, 1, .5, .7), "cm"))
#annotate("text",x='22',y=6,label="Favorites",colour="#008489")
#annotate("text",x=25,y=7.5,label="Line 2",colour="#00bdc4")
ggplot(data=time,aes(x=time)) +
# geom_line(aes(y=tweets,group = 1,colour="#000000"),size=1)+
geom_line(aes(y=fav,group = 1,colour="#faaca7"),size=1)+
geom_line(aes(y=retweet,group = 1,colour="#7fbf7f"),size=1)+
scale_colour_manual(name="Engagement",
values=c("#000000","#faaca7", "#7fbf7f"),
labels=c("Tweets","Favorites", "Retweets"))+
theme_bw() +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill="#F0F0F0")) +
theme(plot.background=element_rect(fill="#F0F0F0")) +
theme(panel.border=element_rect(colour="#F0F0F0")) +
# Format the grid
theme(panel.grid.major=element_line(colour="#D0D0D0",size=.75)) +
theme(axis.ticks=element_blank()) +
# Dispose of the legend
theme(legend.justification=c(1,0), legend.position=c(1,0))+
# Set title and axis labels, and format these and tick marks
ggtitle("Average Number of Favorites and Retweets for Early Light Media \n by Hour of the Day") +
theme(plot.title=element_text(face="bold",hjust=0,vjust=2,colour="#3C3C3C",size=20)) +
ylab("Average") +
xlab("Hour of Day (24 Hour)") +
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5)) +
# Big bold line at y=0
geom_hline(yintercept=0,size=1.2,colour="#535353") +
# Plot margins and finally line annotations
theme(plot.margin = unit(c(1, 1, .5, .7), "cm"))
#annotate("text",x='22',y=6,label="Favorites",colour="#008489")
#annotate("text",x=25,y=7.5,label="Line 2",colour="#00bdc4")
ggplot(data=time,aes(x=time)) +
# geom_line(aes(y=tweets,group = 1,colour="#000000"),size=1)+
geom_line(aes(y=fav,group = 1,colour="#faaca7"),size=1)+
geom_line(aes(y=retweet,group = 1,colour="#7fbf7f"),size=1)+
scale_colour_manual(name="Engagement",
values=c("#000000","#faaca7", "#7fbf7f"),
labels=c("Tweets","Favorites", "Retweets"))+
theme_bw() +
# Set the entire chart region to a light gray color
#theme(panel.background=element_rect(fill="#F0F0F0")) +
theme(plot.background=element_rect(fill="#F0F0F0")) +
theme(panel.border=element_rect(colour="#F0F0F0")) +
# Format the grid
theme(panel.grid.major=element_line(colour="#D0D0D0",size=.75)) +
theme(axis.ticks=element_blank()) +
# Dispose of the legend
theme(legend.justification=c(1,0), legend.position=c(1,0))+
# Set title and axis labels, and format these and tick marks
ggtitle("Average Number of Favorites and Retweets for Early Light Media \n by Hour of the Day") +
theme(plot.title=element_text(face="bold",hjust=0,vjust=2,colour="#3C3C3C",size=20)) +
ylab("Average") +
xlab("Hour of Day (24 Hour)") +
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5)) +
# Big bold line at y=0
geom_hline(yintercept=0,size=1.2,colour="#535353") +
# Plot margins and finally line annotations
theme(plot.margin = unit(c(1, 1, .5, .7), "cm"))
#annotate("text",x='22',y=6,label="Favorites",colour="#008489")
#annotate("text",x=25,y=7.5,label="Line 2",colour="#00bdc4")
ggplot(data=time,aes(x=time)) +
# geom_line(aes(y=tweets,group = 1,colour="#000000"),size=1)+
geom_line(aes(y=fav,group = 1,colour="#faaca7"),size=1)+
geom_line(aes(y=retweet,group = 1,colour="#7fbf7f"),size=1)+
scale_colour_manual(name="Engagement",
values=c("#faaca7", "#7fbf7f"),
labels=c("Favorites", "Retweets"))+
theme_bw() +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill="#F0F0F0")) +
theme(plot.background=element_rect(fill="#F0F0F0")) +
theme(panel.border=element_rect(colour="#F0F0F0")) +
# Format the grid
theme(panel.grid.major=element_line(colour="#D0D0D0",size=.75)) +
theme(axis.ticks=element_blank()) +
# Dispose of the legend
theme(legend.justification=c(1,0), legend.position=c(1,0))+
# Set title and axis labels, and format these and tick marks
ggtitle("Average Number of Favorites and Retweets for Early Light Media \n by Hour of the Day") +
theme(plot.title=element_text(face="bold",hjust=0,vjust=2,colour="#3C3C3C",size=20)) +
ylab("Average") +
xlab("Hour of Day (24 Hour)") +
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5)) +
# Big bold line at y=0
geom_hline(yintercept=0,size=1.2,colour="#535353") +
# Plot margins and finally line annotations
theme(plot.margin = unit(c(1, 1, .5, .7), "cm"))
#annotate("text",x='22',y=6,label="Favorites",colour="#008489")
#annotate("text",x=25,y=7.5,label="Line 2",colour="#00bdc4")
View(data)
